### 
### Sunsteel API Manual Testing
### Use VS Code REST Client extension (free) or copy these into Thunder Client individual requests
###

@baseUrl = http://localhost:4000/api
@email = test-user@example.com
@password = SecurePassword123!

# Supply a valid Supabase JWT (from frontend login) for manual testing
@supabaseToken = eyJhbGciOiJIUzI1NiIsImtpZCI6ImF2ZkhJQzdTaU9BN1RDcUYiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2R2cW9yc2dyb2xreXZscWN1anh0LnN1cGFiYXNlLmNvL2F1dGgvdjEiLCJzdWIiOiJlZDM3YzZhNC0zNzYxLTQ2M2EtYjE2Ny0wMWJhN2IxZjI2Y2MiLCJhdWQiOiJhdXRoZW50aWNhdGVkIiwiZXhwIjoxNzU5NTEyMTYzLCJpYXQiOjE3NTk1MDg1NjMsImVtYWlsIjoiZXplLm9saXZlcm85NkBvdXRsb29rLmNvbSIsInBob25lIjoiIiwiYXBwX21ldGFkYXRhIjp7InByb3ZpZGVyIjoiZW1haWwiLCJwcm92aWRlcnMiOlsiZW1haWwiXX0sInVzZXJfbWV0YWRhdGEiOnsiZW1haWwiOiJlemUub2xpdmVybzk2QG91dGxvb2suY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsIm5hbWUiOiJUZXN0IFVzZXIiLCJwaG9uZV92ZXJpZmllZCI6ZmFsc2UsInN1YiI6ImVkMzdjNmE0LTM3NjEtNDYzYS1iMTY3LTAxYmE3YjFmMjZjYyJ9LCJyb2xlIjoiYXV0aGVudGljYXRlZCIsImFhbCI6ImFhbDEiLCJhbXIiOlt7Im1ldGhvZCI6InBhc3N3b3JkIiwidGltZXN0YW1wIjoxNzU5NTA4NTYzfV0sInNlc3Npb25faWQiOiJkOGJmZmZlOS02YTA2LTRhODYtYTMyYS05ZGE0OTI3ZmUyZDkiLCJpc19hbm9ueW1vdXMiOmZhbHNlfQ.vuKwujyhySKo6CVhnhgmQDWQ03fP8suPiPle6X3oAds

# Optional helper: set a valid Exercise ID after listing exercises
@exerciseId = 86dedb40-0f3e-4be7-985b-0bc21e846e11

### STEP 1: Verify Supabase Token
# @name verify-supabase
POST {{baseUrl}}/auth/supabase/verify
Content-Type: application/json

{
  "token": "{{supabaseToken}}"
}

# Note:
# - Replace {{supabaseToken}} with a real Supabase JWT (Bearer token).
# - Subsequent requests use Authorization: Bearer {{supabaseToken}}.

###
### STEP 1A: List Exercises (Get a valid exerciseId)
# Requires a valid Supabase token from Step 1
GET {{baseUrl}}/exercises
Authorization: Bearer {{supabaseToken}}

# After running this, copy any returned `id` value
# and set it in the variable above: `@exerciseId = <id>`

###
### STEP 2: Create Routine (Simple)
# Use the token from Step 1
POST {{baseUrl}}/routines
Content-Type: application/json
Authorization: Bearer {{supabaseToken}}

{
  "name": "Manual Test Routine",
  "description": "Testing via HTTP client",
  "isPeriodized": false,
  "days": [
    {
      "dayOfWeek": 1,
      "exercises": [
        {
          "exerciseId": "{{exerciseId}}",
          "restSeconds": 120,
          "progressionScheme": "NONE",
          "sets": [
            {
              "setNumber": 1,
              "repType": "FIXED",
              "reps": 10,
              "weight": 50
            }
          ]
        }
      ]
    }
  ]
}

###
### STEP 3: Create Complex Routine (PROGRAMMED_RTF + DDP)
POST {{baseUrl}}/routines
Content-Type: application/json
Authorization: Bearer {{supabaseToken}}



###
### STEP 4: Get All Routines
GET {{baseUrl}}/routines
Authorization: Bearer {{supabaseToken}}

###
### STEP 5: Get Specific Routine (replace with actual ID)
GET {{baseUrl}}/routines/ROUTINE_ID_HERE
Authorization: Bearer {{supabaseToken}}

###
### STEP 6: Delete Routine (replace with actual ID)
DELETE {{baseUrl}}/routines/2a8d37bd-5cc3-43d2-b121-d87f1084033f
Authorization: Bearer {{supabaseToken}}

###
### HELPER: Get Exercises (to find exercise IDs)
GET {{baseUrl}}/exercises
Authorization: Bearer {{supabaseToken}}

###
### HELPER: Get Exercises by Muscle Group
GET {{baseUrl}}/exercises?primaryMuscles=PECTORAL
Authorization: Bearer {{supabaseToken}}

###
### HELPER: Profile (requires Supabase Bearer token)
# @name profile
GET {{baseUrl}}/auth/supabase/profile
Authorization: Bearer {{supabaseToken}}

### HELPER: Health
GET {{baseUrl}}/auth/supabase/health

### HELPER: Logout (clears session cookie)
POST {{baseUrl}}/auth/supabase/logout

